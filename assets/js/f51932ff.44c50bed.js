"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[566],{7522:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var o=n(9901);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,b=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return n?o.createElement(b,r(r({ref:t},d),{},{components:n})):o.createElement(b,r({ref:t},d))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<a;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6310:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>b,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(3223),i=(n(9901),n(7522));const a={},r="MainButton",l={unversionedId:"libraries/twa-js-sdk/components/main-button",id:"libraries/twa-js-sdk/components/main-button",title:"MainButton",description:"The component which controls the main button, which is displayed at the bottom of the Web App in the Telegram interface. There is more information about this component in this documentation.",source:"@site/docs/libraries/twa-js-sdk/components/main-button.mdx",sourceDirName:"libraries/twa-js-sdk/components",slug:"/libraries/twa-js-sdk/components/main-button",permalink:"/docs/libraries/twa-js-sdk/components/main-button",draft:!1,editUrl:"https://github.com/twa-dev/docs/tree/master/docs/libraries/twa-js-sdk/components/main-button.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"InitData",permalink:"/docs/libraries/twa-js-sdk/components/init-data"},next:{title:"Popup",permalink:"/docs/libraries/twa-js-sdk/components/popup"}},s={},p=[{value:"Initialization",id:"initialization",level:2},{value:"Methods and properties",id:"methods-and-properties",level:2},{value:"Button visibility",id:"button-visibility",level:3},{value:"Loader",id:"loader",level:3},{value:"Active state",id:"active-state",level:3},{value:"Background color",id:"background-color",level:3},{value:"Text color",id:"text-color",level:3},{value:"Text",id:"text",level:2},{value:"Events",id:"events",level:2}],d=(c="ComponentSupportedEvents",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var c;const u={toc:p},m="wrapper";function b(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mainbutton"},(0,i.kt)("inlineCode",{parentName:"h1"},"MainButton")),(0,i.kt)("p",null,"The component which controls the main button, which is displayed at the bottom of the Web App in the Telegram interface. There is more information about this component in this ",(0,i.kt)("a",{parentName:"p",href:"/docs/ui/main-button"},"documentation"),"."),(0,i.kt)("h2",{id:"initialization"},"Initialization"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BackButton } from '@twa.js/sdk';\n\nconst mainButton = new MainButton('#000000', '#ffffff');\n")),(0,i.kt)("h2",{id:"methods-and-properties"},"Methods and properties"),(0,i.kt)("h3",{id:"button-visibility"},"Button visibility"),(0,i.kt)("p",null,"To control the ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," visibility, you could use such methods as ",(0,i.kt)("inlineCode",{parentName:"p"},"show()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"hide()"),". Both of them update component's ",(0,i.kt)("inlineCode",{parentName:"p"},"isVisible")," property:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.show();  \nconsole.log(mainButton.isVisible); // true  \n  \nmainButton.hide();  \nconsole.log(mainButton.isVisible); // false  \n")),(0,i.kt)("h3",{id:"loader"},"Loader"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," could display a loader inside of it. To control its visibility, use ",(0,i.kt)("inlineCode",{parentName:"p"},"showProgress()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"hideProgress()")," methods. The ",(0,i.kt)("inlineCode",{parentName:"p"},"isProgressVisible")," property will be changed."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.showProgress();\nconsole.log(mainButton.isProgressVisible); // true  \n\nmainButton.hideProgress();\nconsole.log(mainButton.isProgressVisible); // false\n")),(0,i.kt)("h3",{id:"active-state"},"Active state"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," can be enabled and disabled by calling ",(0,i.kt)("inlineCode",{parentName:"p"},"disable()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"enable()")," methods. Both of the methods will update the ",(0,i.kt)("inlineCode",{parentName:"p"},"isEnabled")," property."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.enable();\nconsole.log(mainButton.isEnabled); // true  \n\nmainButton.disable();\nconsole.log(mainButton.isEnabled); // false\n")),(0,i.kt)("p",null,"Enabling the ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," will allow a user to click it. As the result, the ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," will receive the ",(0,i.kt)("inlineCode",{parentName:"p"},"click")," event. Otherwise, no event will be received."),(0,i.kt)("h3",{id:"background-color"},"Background color"),(0,i.kt)("p",null,"To update the ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," background color, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"setBackgroundColor(color: RGB)")," method. It will update the ",(0,i.kt)("inlineCode",{parentName:"p"},"backgroundColor")," property."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.setBackgroundColor('#ffffaa');\nconsole.log(mainButton.color); // '#ffffaa'\n")),(0,i.kt)("h3",{id:"text-color"},"Text color"),(0,i.kt)("p",null,"To update the ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," text color, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"setTextColor(color: RGB)")," method. It will update the ",(0,i.kt)("inlineCode",{parentName:"p"},"textColor")," property."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.setTextColor('#cca233');\nconsole.log(mainButton.textColor); // '#cca233'\n")),(0,i.kt)("h2",{id:"text"},"Text"),(0,i.kt)("p",null,"To update the ",(0,i.kt)("inlineCode",{parentName:"p"},"MainButton")," text, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"setText(text: string)")," method. It will update the ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," property."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"mainButton.setText('Submit');\nconsole.log(mainButton.text); // 'Submit'\n")),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)(d,{events:{backgroundColorChanged:"(color: RGB) => void",click:"() => void",isProgressVisibleChanged:"(isVisible: boolean) => void",isEnabledChanged:"(isEnabled: boolean) => void",isVisibleChanged:"(isVisible: boolean) => void",textChanged:"(text: string) => void",textColorChanged:"(color: RGB) => void"},mdxType:"ComponentSupportedEvents"}))}b.isMDXComponent=!0}}]);