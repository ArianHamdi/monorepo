"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[493],{7522:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(9901);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7595:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(3223),r=(n(9901),n(7522));const o={},i="ThemeParams",l={unversionedId:"libraries/twa-js-sdk/components/theme-params",id:"libraries/twa-js-sdk/components/theme-params",title:"ThemeParams",description:"The component which contains an information about currently used theme by the application. There is more information about this component in this documentation.",source:"@site/docs/libraries/twa-js-sdk/components/theme-params.mdx",sourceDirName:"libraries/twa-js-sdk/components",slug:"/libraries/twa-js-sdk/components/theme-params",permalink:"/docs/libraries/twa-js-sdk/components/theme-params",draft:!1,editUrl:"https://github.com/twa-dev/docs/tree/master/docs/libraries/twa-js-sdk/components/theme-params.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"QRScanner",permalink:"/docs/libraries/twa-js-sdk/components/qr-scanner"},next:{title:"Viewport",permalink:"/docs/libraries/twa-js-sdk/components/viewport"}},s={},c=[{value:"Initialization",id:"initialization",level:2},{value:"Requesting actual data",id:"requesting-actual-data",level:2},{value:"Creating synchronized instance",id:"creating-synchronized-instance",level:2},{value:"Colors",id:"colors",level:2},{value:"Events",id:"events",level:2}],p=(m="ComponentSupportedEvents",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var m;const u={toc:c},d="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"themeparams"},(0,r.kt)("inlineCode",{parentName:"h1"},"ThemeParams")),(0,r.kt)("p",null,"The component which contains an information about currently used theme by the application. There is more information about this component in this ",(0,r.kt)("a",{parentName:"p",href:"/docs/ui/theme-params"},"documentation"),"."),(0,r.kt)("h2",{id:"initialization"},"Initialization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ThemeParams } from '@twa.js/sdk';\n  \nconst themeParams = new ThemeParams({\n  backgroundColor: '#ffaabb',\n  buttonColor: '#113222',\n  buttonTextColor: '#aabc33',\n  hintColor: '#00ff00',\n  linkColor: '#a32213',\n  secondaryBackgroundColor: '#000000',\n  textColor: '#aaaaaa',\n});  \n")),(0,r.kt)("h2",{id:"requesting-actual-data"},"Requesting actual data"),(0,r.kt)("p",null,"To get the actual theme parameters information, developer could use the ",(0,r.kt)("inlineCode",{parentName:"p"},"request()")," static method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ThemeParams } from '@twa.js/sdk';\n\nThemeParams.request().then(console.log);\n\n// Output:\n// { backgroundColor: '#ffaabb', ... }\n")),(0,r.kt)("h2",{id:"creating-synchronized-instance"},"Creating synchronized instance"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ThemeParams")," is capable of returning an instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"ThemeParams")," which is synchronized with its actual state in the Telegram application. To get it, use static the ",(0,r.kt)("inlineCode",{parentName:"p"},"synced()")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ThemeParams } from '@twa.js/sdk';\n\nconst themeParams = await ThemeParams.synced();\n")),(0,r.kt)("p",null,"Synchronized instance contains actual parameters values. It also being updated in case, parameters are changing in the native Telegram application."),(0,r.kt)("h2",{id:"colors"},"Colors"),(0,r.kt)("p",null,"List of colors, provided by ",(0,r.kt)("inlineCode",{parentName:"p"},"ThemeParams"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"backgroundColor: RGB | null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"buttonColor: RGB | null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"buttonTextColor: RGB | null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hintColor: RGB | null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"linkColor: RGB | null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"secondaryBackgroundColor: RGB | null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"textColor: RGB | null"))),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)(p,{events:{changed:"() => void"},mdxType:"ComponentSupportedEvents"}))}h.isMDXComponent=!0}}]);