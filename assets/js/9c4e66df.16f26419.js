"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[429],{7522:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var i=n(9901);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),l=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return i.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?i.createElement(h,a(a({ref:t},c),{},{components:n})):i.createElement(h,a({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1647:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(3223),r=(n(9901),n(7522));const o={},a="Viewport",s={unversionedId:"libraries/twa-js-sdk/components/viewport",id:"libraries/twa-js-sdk/components/viewport",title:"Viewport",description:"The component which contains an information about the current Web App device viewport, its dimensions and state.",source:"@site/docs/libraries/twa-js-sdk/components/viewport.mdx",sourceDirName:"libraries/twa-js-sdk/components",slug:"/libraries/twa-js-sdk/components/viewport",permalink:"/docs/libraries/twa-js-sdk/components/viewport",draft:!1,editUrl:"https://github.com/twa-dev/docs/tree/master/docs/libraries/twa-js-sdk/components/viewport.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"ThemeParams",permalink:"/docs/libraries/twa-js-sdk/components/theme-params"},next:{title:"WebApp",permalink:"/docs/libraries/twa-js-sdk/components/web-app"}},p={},l=[{value:"Initialization",id:"initialization",level:2},{value:"Dimensions",id:"dimensions",level:2},{value:"Requesting actual data",id:"requesting-actual-data",level:2},{value:"Creating synchronized instance",id:"creating-synchronized-instance",level:2},{value:"Events",id:"events",level:2}],c=(d="ComponentSupportedEvents",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var d;const u={toc:l},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"viewport"},(0,r.kt)("inlineCode",{parentName:"h1"},"Viewport")),(0,r.kt)("p",null,"The component which contains an information about the current Web App device viewport, its dimensions and state."),(0,r.kt)("h2",{id:"initialization"},"Initialization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Viewport } from '@twa.js/sdk';\n  \n// Specify height, width, stable height and expansion status.\nconst viewport = new Viewport(390, 365, 300, false);\n")),(0,r.kt)("h2",{id:"dimensions"},"Dimensions"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Viewport")," instance contains information about viewport dimensions. We can get current visible are height and width via ",(0,r.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"width")," properties."),(0,r.kt)("p",null,'The application can display just the top part of the Web App, with its lower part remaining outside the screen area. From this position, the user can "pull" the Web App to its maximum height, while the bot can do the same by calling ',(0,r.kt)("inlineCode",{parentName:"p"},"expand")," method (use ",(0,r.kt)("inlineCode",{parentName:"p"},"isExpanded")," prop to get current expansion state).  As the position of the Web App changes, the current height value of the visible area will be updated in real time."),(0,r.kt)("p",null,"Please note that the refresh rate of this value is not sufficient to smoothly follow the lower border of the window. It should not be used to pin interface elements to the bottom of the visible area. It's more appropriate to use the value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"stableHeight")," field for this purpose."),(0,r.kt)("h2",{id:"requesting-actual-data"},"Requesting actual data"),(0,r.kt)("p",null,"To get actual viewport information, you could use static ",(0,r.kt)("inlineCode",{parentName:"p"},"request()")," function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Viewport } from '@twa.js/sdk';\n\nViewport.request().then(console.log);\n\n// Output:\n// { height: 122, isExpanded: false, width: 375, isStateStable: true }\n")),(0,r.kt)("h2",{id:"creating-synchronized-instance"},"Creating synchronized instance"),(0,r.kt)("p",null,"Class is capable of returning instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"Viewport")," which is synchronized with its actual state in Telegram application. To get it, use static ",(0,r.kt)("inlineCode",{parentName:"p"},"synced()")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Viewport } from '@twa.js/sdk';\n\nconst viewport = await Viewport.synced();\n\nconsole.log(viewport.height); // 390\nconsole.log(viewport.stableHeight); // 300\nconsole.log(viewport.width); // 365\nconsole.log(viewport.isExpanded); // false\nconsole.log(viewport.isStable); // false\n")),(0,r.kt)("p",null,"Synchronized instance contains actual parameters values. It also being updated in case, parameters are changing in the native Telegram application."),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)(c,{events:{heightChanged:"(height: number) => void",isExpandedChanged:"(isExpanded: boolean) => void",stableHeightChanged:"(stableHeight: number) => void",widthChanged:"(width: number) => void"},mdxType:"ComponentSupportedEvents"}))}h.isMDXComponent=!0}}]);