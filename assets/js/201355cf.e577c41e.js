"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[484],{7522:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var r=n(9901);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,k=c["".concat(l,".").concat(m)]||c[m]||u[m]||i;return n?r.createElement(k,a(a({ref:t},d),{},{components:n})):r.createElement(k,a({ref:t},d))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3277:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(3223),o=(n(9901),n(7522));const i={sidebar_label:"@twa.js/sdk-solid",sidebar_position:6},a="@twa.js/sdk-solid",s={unversionedId:"libraries/twa-js-sdk-solid",id:"libraries/twa-js-sdk-solid",title:"@twa.js/sdk-solid",description:"Solid JS bindings for client SDK. Includes hooks, components and utilities for comfortable usage of Solid JS on the Telegram Web Apps platform.",source:"@site/docs/libraries/twa-js-sdk-solid.mdx",sourceDirName:"libraries",slug:"/libraries/twa-js-sdk-solid",permalink:"/docs/libraries/twa-js-sdk-solid",draft:!1,editUrl:"https://github.com/twa-dev/docs/tree/master/docs/libraries/twa-js-sdk-solid.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"@twa.js/sdk-solid",sidebar_position:6},sidebar:"sidebar",previous:{title:"@twa.js/sdk-react",permalink:"/docs/libraries/twa-js-sdk-react"},next:{title:"init-data-golang",permalink:"/docs/libraries/init-data-golang"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"SDKProvider",id:"sdkprovider",level:3},{value:"useSDKContext",id:"usesdkcontext",level:3},{value:"useSDK",id:"usesdk",level:3},{value:"Complete example",id:"complete-example",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},c=d("LibraryBadges"),u=d("NpmInstall"),m={toc:p},k="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(k,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"twajssdk-solid"},"@twa.js/sdk-solid"),(0,o.kt)("p",null,"Solid JS bindings for ",(0,o.kt)("a",{parentName:"p",href:"twa-js-sdk/about"},"client SDK"),". Includes hooks, components and utilities for comfortable usage of Solid JS on the Telegram Web Apps platform."),(0,o.kt)(c,{pkg:"@twa.js/sdk-solid",mdxType:"LibraryBadges"}),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Before anything else, it is assumed that you have already installed the ",(0,o.kt)("inlineCode",{parentName:"p"},"solid-js")," package, as it is a peer dependency of this package. The installation of the SDK itself is not required, as it is already included in ",(0,o.kt)("inlineCode",{parentName:"p"},"@twa.js/sdk-solid"),"."),(0,o.kt)(u,{pkg:"@twa.js/sdk-solid",mdxType:"NpmInstall"}),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"sdkprovider"},"SDKProvider"),(0,o.kt)("p",null,"According to the ",(0,o.kt)("inlineCode",{parentName:"p"},"@twa.js/sdk")," ",(0,o.kt)("a",{parentName:"p",href:"twa-js-sdk/about"},"documentation"),", it consists of a set of components that are not initialized by default. Developers are responsible for creating these components themselves. However, the SDK provides the ",(0,o.kt)("inlineCode",{parentName:"p"},"init")," function, which simplifies the process of creating the components and using the standard TWA flow. It handles all the necessary steps for developers."),(0,o.kt)("p",null,"To make the SDK functionality available to the application and allow the initialization of newly created components, we need to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"SDKProvider")," component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import { SDKProvider } from '@twa.js/sdk-solid';\n\nfunction Root() {\n  return (\n    <SDKProvider>\n      <div>My application!</div>\n    </SDKProvider>\n  );\n}\n")),(0,o.kt)("p",null,"Internally, the ",(0,o.kt)("inlineCode",{parentName:"p"},"SDKProvider")," utilizes the ",(0,o.kt)("inlineCode",{parentName:"p"},"init")," function from ",(0,o.kt)("inlineCode",{parentName:"p"},"@twa.js/sdk"),". It accepts an optional list of parameters through the ",(0,o.kt)("inlineCode",{parentName:"p"},"initOptions")," property, which is described ",(0,o.kt)("a",{parentName:"p",href:"twa-js-sdk/about#init"},"here"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import { SDKProvider, SDKInitOptions } from '@twa.js/sdk-solid';\n\nfunction Root() {\n  const options: SDKInitOptions = {\n    acceptScrollbarStyle: true,\n    checkCompat: true,\n    debug: true\n  };\n\n  return (\n    <SDKProvider initOptions={options}>\n      <div>My application!</div>\n    </SDKProvider>\n  );\n}\n")),(0,o.kt)("p",null,"Most of the time, there is no need to use ",(0,o.kt)("inlineCode",{parentName:"p"},"initOptions")," unless you have specific logic in your application. Typically, the SDK handles everything necessary for developers, so there is no need for additional configuration."),(0,o.kt)("h3",{id:"usesdkcontext"},"useSDKContext"),(0,o.kt)("p",null,"By using the ",(0,o.kt)("inlineCode",{parentName:"p"},"SDKProvider")," component, the child elements are able to utilize the ",(0,o.kt)("inlineCode",{parentName:"p"},"useSDK")," hook to access core SDK information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import { SDKProvider, useSDKContext } from '@twa.js/sdk-solid';\n\nfunction App() {\n  const sdk = useSDKContext();\n\n  // Here we can use the SDK init information.\n\n  return <div>My application!</div>;\n}\n\nfunction Root() {\n  return (\n    <SDKProvider>\n      <App/>\n    </SDKProvider>\n  );\n}\n")),(0,o.kt)("h3",{id:"usesdk"},"useSDK"),(0,o.kt)("p",null,"Hook ",(0,o.kt)("inlineCode",{parentName:"p"},"useSDK")," is used to gain access to provided SDK components."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"useSDK")," will throw an error in case, SDK is not yet ready to be used. To avoid this problem use ",(0,o.kt)("inlineCode",{parentName:"p"},"useSDKContext")," to track the SDK init process.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'jsx title="Usage example"',jsx:!0,title:'"Usage','example"':!0},"import { createMemo, Switch, Match, ParentProps } from 'solid-js';\nimport { SDKProvider, useSDK, useSDKContext } from '@twa.js/sdk-solid';\n\nfunction App() {\n  const sdk = useSDK();\n\n  // useSDK will not throw an error here as long as the App\n  // component will only be displayed in case, SDK is ready\n  // to be used.\n\n  return <div>My application!</div>;\n}\n\n/**\n * Component responsible for controlling the process of application display.\n */\nfunction DisplayGate(props: ParentProps) {\n  const { loading, error } = useSDKContext();\n  const errorMessage = createMemo<null | string>(() => {\n    const err = error();\n\n    if (!err) {\n      return null;\n    }\n\n    return err instanceof Error ? err.message : 'Unknown error';\n  });\n\n  return (\n    <Switch fallback={props.children}>\n      <Match when={errorMessage()}>\n        <p>\n          SDK was unable to initialize. Probably, current application is being used\n          not in Telegram Web Apps environment.\n        </p>\n        <blockquote>\n          <p>{errorMessage()}</p>\n        </blockquote>\n      </Match>\n      <Match when={loading()}>\n        <div>Loading..</div>\n      </Match>\n    </Switch>\n  );\n}\n\nfunction Root() {\n  return (\n    <SDKProvider initOptions={{ debug: true }}>\n      <DisplayGate>\n        <App/>\n      </DisplayGate>\n    </SDKProvider>\n  );\n}\n")),(0,o.kt)("h2",{id:"complete-example"},"Complete example"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Telegram-Web-Apps/twa.js/blob/master/apps/solid-sdk-example/src/Root.tsx"},"Code")," and package usage example could be found in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Telegram-Web-Apps/twa.js/tree/master/apps/solid-sdk-example"},"monorepo"),"."))}f.isMDXComponent=!0}}]);