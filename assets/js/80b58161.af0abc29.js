"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[286],{7522:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(9901);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=i,m=p["".concat(s,".").concat(g)]||p[g]||u[g]||r;return n?a.createElement(m,o(o({ref:t},d),{},{components:n})):a.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2465:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(3223),i=(n(9901),n(7522));const r={sidebar_position:100},o="init-data-golang",l={unversionedId:"libraries/init-data-golang",id:"libraries/init-data-golang",title:"init-data-golang",description:"The package provides utilities to work with the initialization data of Telegram Web Apps. To learn more about the initialization data and its usage, please refer to the documentation.",source:"@site/docs/libraries/init-data-golang.md",sourceDirName:"libraries",slug:"/libraries/init-data-golang",permalink:"/docs/libraries/init-data-golang",draft:!1,editUrl:"https://github.com/twa-dev/docs/tree/master/docs/libraries/init-data-golang.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"sidebar",previous:{title:"@twa.js/sdk-solid",permalink:"/docs/libraries/twa-js-sdk-solid"},next:{title:"@twa-dev/bridge",permalink:"/docs/libraries/twa-dev-bridge"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Validation",id:"validation",level:2},{value:"Parsing",id:"parsing",level:2},{value:"Signing",id:"signing",level:2},{value:"GoDoc",id:"godoc",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"init-data-golang"},"init-data-golang"),(0,i.kt)("p",null,"The package provides utilities to work with the initialization data of Telegram Web Apps. To learn more about the initialization data and its usage, please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/launch-params/init-data"},"documentation"),"."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"go get github.com/telegram-web-apps/init-data-golang\n")),(0,i.kt)("h2",{id:"validation"},"Validation"),(0,i.kt)("p",null,"If the expiration time is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),", the function will skip the expiration time check. However, it is recommended to specify a non-zero value, as this check is considered important in preventing the usage of old stolen initialization data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "github.com/Telegram-Web-Apps/init-data-golang"\n    "time"\n)\n\nfunc main() {\n    // Init data in raw format.\n    initData := "query_id=AAHdF6IQAAAAAN0XohDhrOrc&..."\n\n    // Telegram Bot secret key.\n    token := "627618978:amnnncjocxKJf"\n\n    // Define how long since init data generation date init data is valid.\n    expIn := 24 * time.Hour\n\n    // Will return error in case, init data is invalid. To see,\n    // which error could be returned, see errors.go file.\n    fmt.Println(initdata.Validate(initData, token, expIn))\n}\n')),(0,i.kt)("h2",{id:"parsing"},"Parsing"),(0,i.kt)("p",null,"It is important to note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"Parse")," function does not perform the same checks as the ",(0,i.kt)("inlineCode",{parentName:"p"},"Validate")," function. Therefore, this function solely parses incoming data without conducting validations for the hash or expiration time."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "github.com/Telegram-Web-Apps/init-data-golang"\n)\n\nfunc main() {\n    // Init data in raw format.\n    initData := "query_id=AAHdF6IQAAAAAN0XohDhrOrc&..."\n    \n    // Will return 2 values.\n    // 1. Pointer to InitData in case, passed data has correct format.\n    // 2. Error in case, something is wrong. \n    fmt.Println(initdata.Parse(initData))\n}\n')),(0,i.kt)("h2",{id:"signing"},"Signing"),(0,i.kt)("p",null,"The functions that sign data remove parameters such as ",(0,i.kt)("inlineCode",{parentName:"p"},"hash")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"auth_date")," since it is assumed that the ",(0,i.kt)("inlineCode",{parentName:"p"},"hash")," will be returned by the function and the ",(0,i.kt)("inlineCode",{parentName:"p"},"auth_date")," will be set by the function itself."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "github.com/Telegram-Web-Apps/init-data-golang"\n    "time"\n)\n\nfunc main() {\n    // Init data in raw format.\n    initData := "query_id=AAHdF6IQAAAAAN0XohDhrOrc&..."\n\n    // Telegram Bot secret key.\n    token := "627618978:amnnncjocxKJf"\n\n    // Signing timestamp.\n    authDate := time.Now()\n\n    // The first value is parameters sign result ("hash" init data property).\n    // The second one is error which could occur while parsing query string as\n    // query parameters.\n    fmt.Println(initdata.SignQueryString(initData, token, authDate))\n    // or\n    fmt.Println(initdata.Sign(map[string]string{\n        "query_id": "AAHdF6IQAAAAAN0XohDhrOrc",\n        // ...\n    }, token, authDate))\n}\n')),(0,i.kt)("h2",{id:"godoc"},"GoDoc"),(0,i.kt)("p",null,"To see GoDoc documentation, visit ",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/telegram-web-apps/init-data-golang"},"this link"),"."))}u.isMDXComponent=!0}}]);