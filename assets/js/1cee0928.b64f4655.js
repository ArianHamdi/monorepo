"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[385],{7522:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(9901);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(a),m=i,f=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var d=2;d<r;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9308:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=a(3223),i=(a(9901),a(7522));const r={sidebar_label:"@twa.js/init-data-node",sidebar_position:3},o="@twa.js/init-data-node",s={unversionedId:"libraries/twa-js-init-data-node",id:"libraries/twa-js-init-data-node",title:"@twa.js/init-data-node",description:"The package provides utilities to work with the initialization data of Telegram Web Apps on the server side. To learn more about the initialization data and its usage, please refer to the documentation.",source:"@site/docs/libraries/twa-js-init-data-node.mdx",sourceDirName:"libraries",slug:"/libraries/twa-js-init-data-node",permalink:"/docs/libraries/twa-js-init-data-node",draft:!1,editUrl:"https://github.com/twa-dev/docs/tree/master/docs/libraries/twa-js-init-data-node.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"@twa.js/init-data-node",sidebar_position:3},sidebar:"sidebar",previous:{title:"@twa.js/init-data",permalink:"/docs/libraries/twa-js-init-data"},next:{title:"About",permalink:"/docs/libraries/twa-js-sdk/about"}},l={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Parsing",id:"parsing",level:3},{value:"Validation",id:"validation",level:3}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},u=p("LibraryBadges"),c=p("NpmInstall"),m={toc:d},f="wrapper";function h(e){let{components:t,...a}=e;return(0,i.kt)(f,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"twajsinit-data-node"},"@twa.js/init-data-node"),(0,i.kt)(u,{pkg:"@twa.js/init-data-node",mdxType:"LibraryBadges"}),(0,i.kt)("p",null,"The package provides utilities to work with the initialization data of Telegram Web Apps on the server side. To learn more about the initialization data and its usage, please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/launch-params/init-data"},"documentation"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This package extends the functionality of ",(0,i.kt)("a",{parentName:"p",href:"twa-js-init-data"},(0,i.kt)("inlineCode",{parentName:"a"},"@twa.js/init-data")),", including all its types and utilities. Therefore, there is no need to install both packages separately.")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(c,{pkg:"@twa.js/init-data-node",mdxType:"NpmInstall"}),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"parsing"},"Parsing"),(0,i.kt)("p",null,"You can learn more about parsing utilities in ",(0,i.kt)("a",{parentName:"p",href:"twa-js-init-data#parsing"},(0,i.kt)("inlineCode",{parentName:"a"},"@twa.js/init-data"))," documentation."),(0,i.kt)("h3",{id:"validation"},"Validation"),(0,i.kt)("p",null,"To validate the signature of the initialization data, the ",(0,i.kt)("inlineCode",{parentName:"p"},"validate")," function is used. It expects the initialization data to be passed in raw format (search parameters) and throws an error in certain cases."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { validate } from '@twa.js/init-data-node';\n\nconst secretToken = '5768337691:AAH5YkoiEuPk8-FZa32hStHTqXiLPtAEhx8';\nconst initData =\n  'query_id=AAHdF6IQAAAAAN0XohDhrOrc' +\n  '&user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%7D' +\n  '&auth_date=1662771648' +\n  '&hash=c501b71e775f74ce10e377dea85a7ea24ecd640b223ea86dfe453e0eaed2e2b2';\n\nvalidate(initData, secretToken);\n")),(0,i.kt)("p",null,"Function will throw an error in one of these cases:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"auth_date")," should present integer"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"auth_date")," is empty or not found"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hash")," is empty or not found"),(0,i.kt)("li",{parentName:"ul"},"Signature is invalid"),(0,i.kt)("li",{parentName:"ul"},"Init data expired")),(0,i.kt)("p",null,"By default, the function checks the expiration of the initialization data. The default expiration duration is set to 1 day (86,400 seconds). It is recommended to always check the expiration of the initialization data, as it could be stolen but still remain valid. To disable this feature, pass ",(0,i.kt)("inlineCode",{parentName:"p"},"{ expiresIn: 0 }")," as the third argument."))}h.isMDXComponent=!0}}]);