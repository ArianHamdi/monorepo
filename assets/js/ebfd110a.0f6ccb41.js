"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[319],{7522:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(9901);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?o.createElement(h,r(r({ref:t},c),{},{components:n})):o.createElement(h,r({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=n(3223),a=(n(9901),n(7522));const i={sidebar_position:1,sidebar_label:"About"},r="@twa.js/sdk",s={unversionedId:"libraries/twa-js-sdk/about",id:"libraries/twa-js-sdk/about",title:"@twa.js/sdk",description:"Made from scratch TypeScript library for seamless communication with Telegram Web Apps functionality.",source:"@site/docs/libraries/twa-js-sdk/about.mdx",sourceDirName:"libraries/twa-js-sdk",slug:"/libraries/twa-js-sdk/about",permalink:"/docs/libraries/twa-js-sdk/about",draft:!1,editUrl:"https://github.com/twa-dev/docs/tree/master/docs/libraries/twa-js-sdk/about.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"About"},sidebar:"sidebar",previous:{title:"@twa.js/init-data-node",permalink:"/docs/libraries/twa-js-init-data-node"},next:{title:"BackButton",permalink:"/docs/libraries/twa-js-sdk/components/back-button"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Options",id:"options",level:3},{value:"<code>debug: boolean</code>",id:"debug-boolean",level:4},{value:"<code>checkCompat: boolean</code>",id:"checkcompat-boolean",level:4},{value:"<code>targetOrigin: string</code>",id:"targetorigin-string",level:4},{value:"Launch parameters",id:"launch-parameters",level:2},{value:"Components",id:"components",level:2},{value:"Events",id:"events",level:3},{value:"Methods support",id:"methods-support",level:3}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=c("LibraryBadges"),u=c("NpmInstall"),m={toc:p},h="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(h,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"twajssdk"},"@twa.js/sdk"),(0,a.kt)(d,{pkg:"@twa.js/sdk",mdxType:"LibraryBadges"}),(0,a.kt)("p",null,"Made from scratch TypeScript library for seamless communication with Telegram Web Apps functionality."),(0,a.kt)("p",null,"The code of this library is designed to simplify the process of developers interacting with Telegram Web Apps. It consists of several individual components, each responsible for a specific aspect of the Telegram Web Apps ecosystem."),(0,a.kt)("p",null,"Before you begin using the SDK, we highly recommend familiarizing yourself with the Web Apps ",(0,a.kt)("a",{parentName:"p",href:"/docs/introduction/about-platform"},"documentation")," to grasp the fundamental concepts of the platform."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)(u,{pkg:"@twa.js/sdk",mdxType:"NpmInstall"}),(0,a.kt)("h2",{id:"initialization"},"Initialization"),(0,a.kt)("p",null,"According to the design of this package, the developer has complete control over its lifecycle, including the initialization process. This means that there are no pre-initialized global components available for use by the developer. They must create the components themselves."),(0,a.kt)("p",null,"To simplify the developer's workflow, the package includes a special function called ",(0,a.kt)("inlineCode",{parentName:"p"},"init"),". This function returns instances of the initialized components, making it easier for developers to work with the package."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { init } from '@twa.js/sdk';\n\ninit().then(components => {\n  const { mainButton, viewport } = components;\n\n  mainButton.on('click', () => viewport.expand());\n\n  mainButton\n    .setBackgroundColor('#ff0000')\n    .setTextColor('#ffffff')\n    .setText('Expand')\n    .enable()\n    .show();\n});\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"init")," function has the ability to accept options, which are specified as an object in the first argument of the function. Each option and the options object itself are optional."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { init } from '@twa.js/sdk';\n\ninit(options);\n")),(0,a.kt)("h4",{id:"debug-boolean"},(0,a.kt)("inlineCode",{parentName:"h4"},"debug: boolean")),(0,a.kt)("p",null,"Enables the debug mode, which results in printing more debugging information sent by the SDK."),(0,a.kt)("h4",{id:"checkcompat-boolean"},(0,a.kt)("inlineCode",{parentName:"h4"},"checkCompat: boolean")),(0,a.kt)("p",null,"Enabling the mode in which calls to methods not supported by the current version of the Web App will result in throwing an error is recommended and enabled by default."),(0,a.kt)("h4",{id:"targetorigin-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"targetOrigin: string")),(0,a.kt)("p",null,"Updates the global target origin, which is used by the bridge's ",(0,a.kt)("inlineCode",{parentName:"p"},"postEvent")," function. This restricts the list of parent iframes that are allowed to receive data from the current application. To learn more about this option, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"../twa-js-bridge#target-origin"},"documentation"),"."),(0,a.kt)("h2",{id:"launch-parameters"},"Launch parameters"),(0,a.kt)("p",null,"The launch parameters are the initial parameters passed to the Web App. You can find more information about them in the ",(0,a.kt)("a",{parentName:"p",href:"../../launch-params/about"},"documentation"),"."),(0,a.kt)("p",null,"Developers can retrieve the launch parameters by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"retrieveLaunchParams")," function. This function parses the parameters that begin with the ",(0,a.kt)("inlineCode",{parentName:"p"},"tgWebApp")," prefix."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { retrieveLaunchParams } from '@twa.js/sdk';\n\nconsole.log(retrieveLaunchParams());\n\n// Output:\n// {\n//   version: '6.4',\n//   initData: {\n//     authDate: Mon Feb 20 2023 04:11:25 GMT+0000,\n//     hash: 'kSJkn101-)S(djn1',\n//   },\n//   platform: 'android',\n//   themeParams: {\n//     backgroundColor: '#ffaabb',\n//     buttonColor: '#223112',\n//     buttonTextColor: '#111aa3',\n//     hintColor: '#000000',\n//     linkColor: '#ffffff',\n//     secondaryBackgroundColor: '#aaaaaa',\n//     textColor: '#bbbbbb',\n//   },\n// };\n")),(0,a.kt)("p",null,"This function needs no SDK initialization or something like that. It attempts to extract the launch parameters from the ",(0,a.kt)("inlineCode",{parentName:"p"},"window.location"),". In case, they are invalid or missing, the function will try to extract these parameters from the ",(0,a.kt)("inlineCode",{parentName:"p"},"sessionStorage"),". This function is safe to be used when a user reloads Web App via the ",(0,a.kt)("inlineCode",{parentName:"p"},"Reload Page")," application button."),(0,a.kt)("h2",{id:"components"},"Components"),(0,a.kt)("p",null,"All components in this package are supposed to be used as singletons. This means that you should not create multiple instances of the same component and use them, even if it is not explicitly forbidden. However, in this case, there is no guarantee that everything will work fine."),(0,a.kt)("p",null,"The reason for this is that each component stores its state locally, and the instances of the class are not synchronized with each other. For example, if a developer creates two instances of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Popup")," component and one of them calls the ",(0,a.kt)("inlineCode",{parentName:"p"},"open()")," method, it will change its ",(0,a.kt)("inlineCode",{parentName:"p"},"isOpened")," property to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". However, the second instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"Popup")," will not be aware of this change and will still return a ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," value, which is incorrect."),(0,a.kt)("p",null,"To avoid potential problems, developers can rely on the package's ",(0,a.kt)("inlineCode",{parentName:"p"},"init")," function, which provides initialized components that are sufficient for use across the application."),(0,a.kt)("h3",{id:"events"},"Events"),(0,a.kt)("p",null,"Component instances use the common way of events listening through the ",(0,a.kt)("inlineCode",{parentName:"p"},"on")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"off")," functions. Here is the example with the ",(0,a.kt)("inlineCode",{parentName:"p"},"BackButton")," component:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BackButton } from '@twa.js/sdk';\n\nconst backButton = new BackButton(...);\n\nbackButton.on('click', () => {\n  console.log('Back button clicked.');\n});\n")),(0,a.kt)("p",null,"You can find the list of supported events in components own documentations."),(0,a.kt)("h3",{id:"methods-support"},"Methods support"),(0,a.kt)("p",null,"Almost each component is capable of checking whether its method is supported by the current Web Apps version or not. To check if some methods are supported, developer should use the component instance ",(0,a.kt)("inlineCode",{parentName:"p"},"supports()")," function. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BackButton } from '@twa.js/sdk';\n\nlet backButton = new BackButton('6.0');\nconsole.log(backButton.supports('show')); // false\n\nbackButton = new BackButton('6.3');\nconsole.log(backButton.supports('hide')); // true\n")),(0,a.kt)("p",null,"It is recommended to use this functionality before calling some component method as long as this will make developer sure, it will work. The list of supported methods by components is described in each component documentation."))}f.isMDXComponent=!0}}]);